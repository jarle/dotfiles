" vim:fdm=marker

let mapleader = "\<Space>"

" Plugin list {{{

call plug#begin('~/.vim/plugged')		"only place plugins between begin and end
    "essential
    "Plug 'w0rp/ale'
    Plug 'tpope/vim-surround'
    Plug 'tpope/vim-repeat'
    Plug 'tpope/vim-commentary'
    Plug 'tpope/vim-fugitive'
    Plug 'tpope/vim-unimpaired'
    Plug 'tpope/vim-vinegar'
    "Plug 'tpope/vim-projectionist'
    Plug 'junegunn/fzf.vim'
    Plug 'junegunn/fzf'
    Plug 'Shougo/context_filetype.vim'
    "Plug 'Shougo/deoplete.nvim'
    Plug 'sheerun/vim-polyglot'
    Plug 'wincent/scalpel'

    Plug 'morhetz/gruvbox'
    Plug 'Mattias-/base16-vim'
    Plug 'scwood/vim-hybrid'
call plug#end()
" Plugin end }}}

" General {{{
filetype on
syntax on
set number
set relativenumber
set showcmd                 "show entered command in bottom bar
set cursorline              "highlight current line being edited
set showmatch               "show matching parenthesis
set hidden
set title                   "don't inherit terminal title
set scrolloff=3
set showmode
set sidescroll=1
set scrolloff=8
set sidescrolloff=15
set splitright
set splitbelow
set lazyredraw
set shiftround
set autowriteall
set clipboard+=unnamedplus   "use x clipboard like sane people
set wrap
set list                     "show whitespace
set scroll=7
" General end }}}

" Theme {{{
set termguicolors
set background=dark
colorscheme base16-tomorrow
highlight Comment gui=italic,bold
" Theme end }}}

" Search {{{
set ignorecase
set smartcase               "case-sensitive in case of capital letter
" }}}

" Indentation {{{
set smartindent
set tabstop=4
set softtabstop=0
set expandtab
set shiftwidth=4
" }}}

" File handling {{{
set noswapfile
set nobackup
" }}}


" Remappings {{{
nnoremap <leader>w :vsplit $MYVIMRC<cr>
nnoremap <leader>r :source %<CR>

" Jump between previous and current buffer
nnoremap <leader><leader> <C-^>

function! ShowFiles()
    if !execute("GFiles")
        execute("Files")
    endif
endfunction

nmap <Leader>s <Plug>(Scalpel)
nnoremap <silent><Leader>e :call ShowFiles()<CR>

nnoremap <silent><Leader>a :Buffers<CR>

nnoremap <silent><leader>o :only<CR>
nnoremap <silent><leader>h <C-w>H
nnoremap <silent><leader>j <C-w>J
nnoremap <silent><leader>k <C-w>K
nnoremap <silent><leader>l <C-w>L

nnoremap <silent><leader>q <C-w>q 
nnoremap <Tab> zA

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

tnoremap <C-h> <C-\><C-n>h
tnoremap <C-j> <C-\><C-n>j
tnoremap <C-k> <C-\><C-n>k
tnoremap <C-l> <C-\><C-n>l

noremap <leader>n :set hlsearch!<CR>
noremap <silent><Leader>E <Plug>(Scalpel)

" Remappings end }}}

let g:python2_host_prog = '/usr/local/bin/python'
let g:python3_host_prog = '/usr/local/bin/python3'

packloadall
silent! helptags ALL
