#!/usr/bin/env bash

set -e

# Change to dir of script
cd "$(dirname "$0")"

# Useful variables
BASEDIR="$(pwd)"
BUNDLEDIR="$HOME/.vim/bundle"
BACKUPDIR="$BASEDIR/.backup"
OHMYZSHDIR="$HOME/.oh-my-zsh"

TERMINALFONT="$HOME/.local/share/fonts/Droid Sans Mono for Powerline.otf"
APPLICATIONS="git curl build-essential gnome-terminal zsh libruby2.3 pandoc tmux cmake vim vim-youcompleteme autoconf automake pkg-config libgtk-3-dev python-dev python3-dev clang exuberant-ctags silversearcher-ag fonts-oxygen"

printf "Starting installation\n\n"
sudo -v
rm -rf $BACKUPDIR
mkdir -p $BACKUPDIR $HOME/.vim $BUNDLEDIR

# Install main applications
printf "Installing main applications...\n"
sudo apt-get install -qy $APPLICATIONS

printf "Configuring environment...\n"

if [ ! -d /usr/share/themes/Arc-Dark ] ; then
	git clone https://github.com/horst3180/arc-theme --depth 1
	cd arc-theme
	./autogen.sh --prefix=/usr
	sudo make install
	cd ..
	rm -rf arc-theme
fi

if [ ! -d /usr/share/icons/Arc ] ; then
	git clone https://github.com/horst3180/arc-icon-theme --depth 1
	cd arc-icon-theme
	./autogen.sh --prefix=/usr
	sudo make install
	cd ..
	rm -rf arc-icon-theme
fi

# Download and install different tools from git
git submodule update --init --recursive

if ! type vimpager; then
	cd vim/vimpager
	sudo make -f Makefile install-deb
	cd ../..
	rm -f vim/vimpager_*
fi

if [ ! -d "$BUNDLEDIR/Vundle.vim" ]; then
	git clone --depth=1 https://github.com/VundleVim/Vundle.vim.git "$BUNDLEDIR/Vundle.vim"
fi

if [ ! -d $OHMYZSHDIR ]; then
	mkdir -p $OHMYZSHDIR
	git clone --depth=1 git://github.com/robbyrussell/oh-my-zsh.git $OHMYZSHDIR
	chsh -s /bin/zsh
fi

if [ ! -d "$OHMYZSHDIR/custom/plugins/zsh-syntax-highlighting" ]; then
	git clone --depth=1 https://github.com/zsh-users/zsh-syntax-highlighting.git $OHMYZSHDIR/custom/plugins/zsh-syntax-highlighting
fi

if [ ! -d "$OHMYZSHDIR/custom/plugins/zsh-autosuggestions" ]; then
	git clone --depth=1 git://github.com/zsh-users/zsh-autosuggestions $OHMYZSHDIR/custom/plugins/zsh-autosuggestions
fi

printf "Installing fonts...\n"
if [ ! -f "$TERMINALFONT" ]; then
	source fonts/install.sh 
fi

cp -f zsh/themes/lambda-mod.zsh-theme $OHMYZSHDIR/themes/
mkdir -p $HOME/.vim/colors
cp -f vim/colors/hybrid.vim $HOME/.vim/colors

printf "Setting up symlinks...\n"

for file in */*.symlink; do
	filename="$HOME/.$(basename $file .symlink)"
	# create backup if the file already exists
	if [ -f $filename ]; then
		mv $filename $BACKUPDIR
	fi
	ln $file "$filename"
done

git config --global core.excludesfile "$HOME/.gitignore"

printf "Done!\n"
printf "Old files has been put in $BACKUPDIR\n"
